stages:
  - build
  - test
  - analyse
  - deploy

variables:
  SONAR_ARGS: "-Dsonar.gitlab.commit_sha=${CI_COMMIT_SHA} -Dsonar.gitlab.ref_name=${CI_COMMIT_REF_NAME}"

Build Buggy:
  stage: build
  tags:
    - touchbit-shell
  script:
    - mvn clean install -Dmaven.test.skip=true

Buggy-core test:
  stage: test
  tags:
    - touchbit-shell
  script:
    - cd buggy-core
    - mvn test
  artifacts:
    expire_in: 1 week
    paths:
      - "*/target/reports"

Buggy-feign test:
  stage: test
  tags:
    - touchbit-shell
  script:
    - cd buggy-feign
    - mvn test
  artifacts:
    expire_in: 1 week
    paths:
      - "*/target/reports"

Buggy-okhttp test:
  stage: test
  tags:
    - touchbit-shell
  script:
    - cd buggy-okhttp
    - mvn test
  artifacts:
    expire_in: 1 week
    paths:
      - "*/target/reports"

Sonar:
  stage: analyse
  dependencies:
    - Buggy-core test
    - Buggy-feign test
    - Buggy-okhttp test
  tags:
    - touchbit-shell
  script:
    - >
      if [ "$CI_BUILD_REF_NAME" == "master" ]; then
        mvn compile sonar:sonar -Dsonar.login=$SONAR_LOGIN $SONAR_ARGS
      else
        mvn compile sonar:sonar -Dsonar.login=$SONAR_LOGIN $SONAR_ARGS -Dsonar.analysis.mode=preview
      fi

Deploy Snapshot:
  stage: deploy
  dependencies:
    - Sonar
  except:
    - tags
  when: manual
  script:
    - BUGGY_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
    - SNAPSHOT_BUGGY_VERSION=${BUGGY_VERSION}-SNAPSHOT
    - mvn versions:set -DnewVersion=${SNAPSHOT_BUGGY_VERSION}
    - mvn deploy -Dmaven.test.skip=true
    - "curl -X POST \"https://api.telegram.org/bot$BABBLER_TOKEN/sendMessage?chat_id=$TELEGRAM_BUGGY_CI_CD_CHAT_ID&disable_notification=true&parse_mode=Markdown&text=*Buggy*%0ANew version deployed: %5B${SNAPSHOT_BUGGY_VERSION}%5D%28https://touchbit.org/repository/org/touchbit/buggy/buggy/${SNAPSHOT_BUGGY_VERSION}/\""

Deploy Buggy:
  stage: deploy
  dependencies:
    - Sonar
  before_script:
    - mvn dependency:purge-local-repository@local-buggy
    - mvn dependency:get@current-version && CHECK_RESULT=$(echo $?) || CHECK_RESULT=$(echo $?)
    - >
      if [ "${CHECK_RESULT}" != 1 ]; then
        BUGGY_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        echo "[ERROR] The current version of Buggy ($BUGGY_VERSION) already exists in the TouchBIT repository"
        echo "To set the new version, use the command: 'mvn versions:set -DnewVersion=<new version>'"
        echo "Versioning rules: https://semver.org/spec/v2.0.0-rc.2.html"
        false
      fi
  only:
    - tags
  script:
    - mvn deploy -Dmaven.test.skip=true
    - "curl -X POST \"https://api.telegram.org/bot$BABBLER_TOKEN/sendMessage?chat_id=$TELEGRAM_BUGGY_CI_CD_CHAT_ID&disable_notification=false&parse_mode=Markdown&text=*Buggy*%0ANew version deployed: %5B${BUGGY_VERSION}%5D%28https://touchbit.org/repository/org/touchbit/buggy/\""